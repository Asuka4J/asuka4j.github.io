<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Jiaqing.me</title>
 <link href="http://jiaqing.me/" rel="self"/>
 <link href="http://jiaqing.me"/>
 <updated>2013-08-07T22:03:50+08:00</updated>
 <id>http://jiaqing.me</id>
 <author>
   <name>Asuka4J</name>
   <email>asuka4j@gmail.com</email>
 </author>

 
 <entry>
   <title>城市印象：三亚</title>
   <link href="http://jiaqing.me/life/2013/05/27/impress-sanya"/>
   <updated>2013-05-27T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2013/05/27/impress-sanya</id>
   <content type="html">&lt;h3 id='day1'&gt;DAY1&lt;/h3&gt;

&lt;p&gt;虽说是行程第一天，但对我来说已经蛮疲惫了，因为之前是在家休假，我得赶早上九点的飞机先到上海和某人汇合，然后再一起出发到三亚。苦逼的是，我先是到了虹桥机场，然后横穿整个上海到浦东机场。第一次从浦东T2航站楼出发，这个航站楼是扁平化设计的，出发到达都在同一层，于是乎，等我们走到最末端的96号登机口时几乎奔溃。这次非三亚的人不少，应该也都是冲着假期吧，其中以情侣和亲自游居多，不像去丽江的时候，还能碰上不少孤身独行者。因为太疲惫，我在飞机上晕晕沉沉晃了三个小时后，飞机降落到了三亚凤凰机场。凤凰机场很小，没走两步就出了机场。虽说这时已经是晚上十点，但当那自动门打开刹那，顿时能感受到阵阵热浪袭来，果然是热带地区啊。&lt;br /&gt;因为公交车末班车都停运了，我们直接打车到了酒店。和丽江的小家客栈比起来，三亚的度假酒店可真是高端大气国际化。进门就是巨大的东南亚风格的大堂，大堂里除了各施其职的服务员外，零零散散还有不少游客，直接在这里纳凉闲聊上网。我们办理好checkin，就直接奔着0618号房去了。房间不算非常豪华，但已经很不错了，各种旅行设备一应俱全，浴缸、冰箱、保险箱、油烟机、烘干机、躺椅、海景阳台&amp;#8230;意外的是居然还提供了入住水果和洗衣粉。今天实在太困了，没多久我就进入了梦乡。&lt;/p&gt;

&lt;h3 id='day2'&gt;DAY2&lt;/h3&gt;

&lt;p&gt;一大早就被某人喊醒了，原来某人一直惦记着酒店的早餐呢，好吧，洗漱完毕出发觅食。G层餐厅几乎满座，提供的餐饮也是非常丰盛，看来这次必须饕餮一番了。不过吃到一半突然就下起了大雨，我们只能现在酒店园区内闲晃了，顺便也探探险，看这里面都有哪些机关密室。这时，静静地躺在走廊躺椅上听着哗哗的雨水拍打着园区里的丛林树叶，真是超级惬意。&lt;br /&gt;雨停后，我们径直来到酒店门口的三亚湾沙滩，从地下通道出来时真是眼前一亮，眼前是直接看到海平线的泛蓝大海，左右两边是连绵不绝的三亚湾沙滩，这番景象直接秒杀厦门、青岛、北戴河啊。我们沿着沙滩向市区方向徒步走了很远（似乎还没走到椰海长廊），快到极限的时候还是忍不住打了个出租车，开到市区第一海鲜市场。&lt;br /&gt;这里的海鲜购买和制作是分开的，就是游客先到海鲜摊位上购买活生生的水产，然后带到加工店让老板加工。这一区最出名的加工店是小胡子和梅姐，虽然来的时间不是饭店，但还是人满为患，我们在梅姐家正好蹭到了空位，第一餐就在这里解决了。味道怎么样呢？就是基围虾直接吃到饱，嗯，就这个感觉。吃完海鲜大餐，我们就坐了八路公交灰溜溜回酒店了，这八路公交似乎就是跑市区主干道的，大多景点都能看到它的身影。&lt;br /&gt;回到酒店正好快到傍晚，为了把今天下肚的东东好好消化下，我们换起泳衣就往酒店园区的游泳池跑。游完泳，正好到了园区里的BBQ时间，泡完澡在阳台上泡泡茶，边听着楼下BBQ展台女老外的歌声，我们在网上预定了明天亚龙湾热带天堂景区一日游的团票。&lt;/p&gt;

&lt;h3 id='day3'&gt;DAY3&lt;/h3&gt;

&lt;p&gt;跟团游最不方便的就是，时间不能自主安排。由于我们是离景区最远的散客，导游要我们早上七点就到外面等旅游大巴，杯具。起床的时候都能感觉到身体严重的不听使唤，匆匆在G层吃完早餐就赶着上车了。大巴车走走停停，不断接收散客，几乎清一色的青年情侣。路上我特意开着咕咚运动记录着路线，回来一看，足足来了有34公里才到达亚龙湾热带天堂景区，三亚真是个长条形的城市，和深圳有的一拼。&lt;br /&gt;今天的行程分为上午的热带天堂和下午的亚龙湾海滩两阶段。导游是个东北小伙，已经在三亚从业多年。热带天堂的第一段是兰花谷，不是很有意思，而且进来不久我们团就被拉到小黑屋里听营销讲座了。有趣的是，讲座过后发现，主动掏钱购买的基本都是北方人，而南方人（特别是四川人）则是嘴里带着一丝坏笑出来。第二段我们来到了非诚勿扰里的经典镜头，悬空60米高的索桥。因为山谷气流的关系，走到索桥中间的时候左右晃动得厉害，还真有点小怕，不知葛优当时怎么这么淡定。索桥对面的山头就是传说中的鸟巢度假村了，若干全木质小屋依山搭建，开窗风景甚好，还配备了露天泳池，灰藏Natural。对了，导游这里的租金便宜的一晚8000大洋，葛优住的那间则要上万。听完我们默默地继续前进。第三段是山的最高点，登上塔顶，整个亚龙湾360°尽收眼底，风景甚好。这一路果然没白走。&lt;br /&gt;热带天堂出来的下一站是亚龙湾沙滩。据介绍，这里因为有着核潜艇基地的关系，这片海域禁止任何船只进入，几乎无污染，所以海面海底都特别漂亮。这里有很多水上项目，比如海底浮潜、水上摩托、香蕉船等等，不过我俩兴趣都不大。也受益于什么都没报，省去了很多排队时间，在海滩上逛足三小时。这里的水确实比三亚湾清澈很多，远远都能看到海底，沙子也更加细腻，几乎没有杂质。值得一提的是，本来想凑近去拍下核潜艇基地的军舰，不了被哨兵拦下，看来这边警戒确实蛮严格的。&lt;br /&gt;都说三亚宰客厉害，其实到今天才体验到了。在亚龙湾沙滩的时候饿的不行，跑出来要了碗兰州拉面，20大洋，没有牛肉，清汤里飘着一直孤零零的水煮蛋，坑爹这是。回酒店时在酒店门口的餐馆吃了晚餐，回锅肉28，土豆丝18，蛋炒饭18，看到这个价格后也不敢点什么水产了。对了，吃到一半老板开着奥迪A6回来了，当看到穿着泳裤的老板和穿着睡衣的老板娘下车刹那，饭差点全喷出来了。&lt;br /&gt;天气真是多变，饭后又下起雨来了，还好赶上回到了房间。今晚的BBQ算是搞不成了，不过女老外的歌声依然荡漾，真是敬业。在阳台躺椅上小憩，夹杂着雨声和歌声，顺手拍拍园区，感觉棒极了。&lt;/p&gt;

&lt;h3 id='day4'&gt;DAY4&lt;/h3&gt;

&lt;p&gt;今天也是蛮早就起来了，因为某人一直惦记着要到正儿八紧的海上游一次泳。今天的天气暴热，很多人都是窝在沙滩旁的躺椅上看书睡觉，就我俩傻不拉几地直接杀入水中。看某人玩的甚是Happy，我也不好阻拦了，晒黑就晒黑吧，难得下一次海呢。在这里发现老外带小孩是超级放心，母亲在岸边和人闲聊，就任由10几岁的女儿抱着几岁的小女儿往水里去，连个游泳圈都不带。不像旁边的中国家庭，不是爷爷抱一会就是妈妈抱一会，总之人不离手。&lt;br /&gt;下午继续前往市区探险+觅食。先是打车到椰海长廊，逛逛三亚三大湾的最有一个。到了才发现也是污染最严重的一个湾，可能是最靠近市区的关系，这里到处是垃圾和排污口，即使不脱鞋走着都不大舒服。在这里被狠狠地雷了一下：一对男女披着酒店浴巾就出来逛沙滩了，背后看去好是叱咤。&lt;br /&gt;今天徒步的量可不算小，我们直接从椰海长廊走到第一海鲜市场，然后又走到渔人码头，接着走到海岸边看夜里的凤凰岛。真佩服某人的脚力，不由得让我想起了学生时代一起从春熙路走到火车南站的惊险历程。今天算是累坏了，可能也是明天就要返程的缘故，两人多多少少有点心理波动，同时也在盘算着最后一天怎么安排比较划算。&lt;/p&gt;

&lt;h3 id='day5'&gt;DAY5&lt;/h3&gt;

&lt;p&gt;半夜里想到一个比较休闲的方案，后来也就基本按这个步骤执行了：吃完最后一顿饕餮早餐后，到园区享受最后一次私人泳池。中午退房后在大堂沙发上休息休息，顺手开始整理照片和游记（我才知道为什么这么多人在大堂休闲了，是舍不得走啊）。待到傍晚直接到机场。&lt;br /&gt;出乎意料的是，上海两个机场因为旅游返程高峰不堪重负，不得不宣告今晚飞上海的航班取消。第一次遇到航班取消的状况，一切来的太突然，预案也没预想那么周到。接下来上演了领泡面，等班车拉回酒店，凌晨五点被叫醒，赶七点钟航班回程的遭遇。回来后才知道，如果买了航空意外险，碰到这种情况是可以向保险公司索赔的，亏了。不过总体来说，三亚作为不太如意的上半年唯一的一次旅行，我和某人还是相当满意了。谢谢某人的细心安排。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Goodbye Baidu</title>
   <link href="http://jiaqing.me/work/2013/05/17/goodbye-baidu"/>
   <updated>2013-05-17T00:00:00+08:00</updated>
   <id>http://jiaqing.me/work/2013/05/17/goodbye-baidu</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>Running</title>
   <link href="http://jiaqing.me/life/2013/02/02/memory-running"/>
   <updated>2013-02-02T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2013/02/02/memory-running</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>我的2012</title>
   <link href="http://jiaqing.me/life/2013/01/01/summary-2012"/>
   <updated>2013-01-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2013/01/01/summary-2012</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>tech treemap in java</title>
   <link href="http://jiaqing.me/tech/2012/10/19/tech-treemap-in-java"/>
   <updated>2012-10-19T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/10/19/tech-treemap-in-java</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：潮州</title>
   <link href="http://jiaqing.me/life/2012/10/09/impress-chaozhou"/>
   <updated>2012-10-09T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/10/09/impress-chaozhou</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>事务（三）两阶段提交</title>
   <link href="http://jiaqing.me/tech/2012/10/05/tech-transaction-3"/>
   <updated>2012-10-05T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/10/05/tech-transaction-3</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>事务（二）Spring事务管理</title>
   <link href="http://jiaqing.me/tech/2012/10/03/tech-transaction-2"/>
   <updated>2012-10-03T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/10/03/tech-transaction-2</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>事务（一）事务基础</title>
   <link href="http://jiaqing.me/tech/2012/10/01/tech-transaction"/>
   <updated>2012-10-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/10/01/tech-transaction</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：常州</title>
   <link href="http://jiaqing.me/life/2012/09/30/impress-changzhou"/>
   <updated>2012-09-30T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/09/30/impress-changzhou</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：北京</title>
   <link href="http://jiaqing.me/life/2012/09/01/impress-beijing"/>
   <updated>2012-09-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/09/01/impress-beijing</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：北戴河</title>
   <link href="http://jiaqing.me/life/2012/08/25/impress-beidaihe"/>
   <updated>2012-08-25T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/08/25/impress-beidaihe</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：上海</title>
   <link href="http://jiaqing.me/life/2012/06/06/impress-shanghai"/>
   <updated>2012-06-06T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/06/06/impress-shanghai</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：香格里拉</title>
   <link href="http://jiaqing.me/life/2012/05/21/impress-shangri-la"/>
   <updated>2012-05-21T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/05/21/impress-shangri-la</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：丽江</title>
   <link href="http://jiaqing.me/life/2012/05/20/impress-lijiang"/>
   <updated>2012-05-20T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/05/20/impress-lijiang</id>
   <content type="html">&lt;p&gt;某人的婚假即将到期了，我也趁着这个理由厚脸皮地请了一周的假期，拼上前后的周末，凑出九天时间出来度假。BTW，到一个寻艳遇的地方度婚假，是一种神马心态？&lt;/p&gt;

&lt;h3 id='day1_'&gt;Day.1 大研古城初印象&lt;/h3&gt;

&lt;p&gt;从攻略上看，因为上海直飞丽江的机票比较贵而且常年不打折，不少驴友选择先飞昆明，然后坐九个小时绿皮车到丽江。这样虽廉价很多，但考虑出来玩的时间本来就不多，拿时间换钱实际不划算。所以最终我们还是选择直飞，不过稍微折中一下，先动车到杭州，然后直飞丽江。&lt;br /&gt;可能跟丽江的特色有关，出发的飞机上几乎清一色年轻人，三两成群，也不乏单身一人的，想必是准备到丽江做点什么的吧。当机长广播说飞机即将抵达丽江的时候，飞机上竟上演了一幕求婚记，男主角先是假装上厕所，机上广播响起烂熳的音乐，然后他悄悄从后面来到女主角座位前，递上戒指，过程中还有后端的游客负责录像，看来是谋划已久。看这女主角哭的不成样子，还有乘客们的欢笑。顿时觉得，我们真的即将到达一个很有意思的地方。&lt;br /&gt;虽说丽江机场很小，一眼就能望到头。但自从走出舱门的刹那，我和某人已经完全被眼前的景象震撼到了：环绕四周的群山，加上蓝得深邃的天空，这种感觉实在太美妙了。按我俩的风格，这个时候已经开启装备到处大拍特拍。意外的是机长竟然也主动过来给我俩拍合照，看来是经验人士。&lt;br /&gt;机场大巴缓缓悠悠走在山间公路上，约莫开了有三十多分钟，我们抵达了丽江市区。丽江的市区也很小，建筑物不高，一路上也没见着什么比较大型的商圈。倒是很容易就能区分本地人和游客，全身裹得严严实实的就是本地人，穿着短袖甚至连遮阳伞都不打的就是游客。和市区有巨大反差的是大研古城，也就是这次度假的目的地。他地处丽江市内，和几条主干道接壤。因为商业化的原因，整个古城几乎全是大大小小的客栈、商铺、观光景点。从攻略上看，古城内部的街道错综复杂，第一次进来的人肯定找不到北。好在客栈老板也都有所准备，直接到城外领我俩“进城”。也不知道走了多少个左转弯右转弯，我们来到了第一家客栈“猪猪小院”：这是一个全木质，古典风格的小旅馆，连老板自己的房间在内也才八个房间。好在我们预定比较早，直接占领了二楼最大的一个房间，开窗还能看到狮子山。放完行李我们就迫不及待地出门探险+觅食了。因为是第一天，而且也是傍晚了，就随便在附近几条街晃晃，顺便吃了第一碗米线+小笼包，也第一次目睹了纳西族舞蹈。&lt;br /&gt;关于大研古城的第一印象，是错综复杂的石板路，2000+家各具特色的客栈，满街的游客和犬类。&lt;/p&gt;

&lt;h3 id='day2_'&gt;Day.2 古城探险&lt;/h3&gt;

&lt;p&gt;今天的主题就是大研古镇一日游，左手地图，右手相机，穿街走巷。先是把猪猪小院附近的地形弄熟悉了，免得找不到回来的路。然后就一路瞎逛：木府前的广场、小吃一条街、四方广场、狮子山、酒吧街、一直往北走到黑龙潭公园才回头。总体而言，真是超耐逛的一个古城，处处有惊喜。出了逛街，我俩也顺手品尝了当地几大名菜的两大，石锅鱼和腊排骨。石锅鱼没太大感觉，腊排骨倒是回味至今。回程的时候已是傍晚时分，再次路过酒吧街是，景象已经和白天完全不一样，灯光绚烂，人潮鼎沸。我俩也索性进了一家叫“小巴黎”的轻酒，点上半打百威，烛光下感受感受西域歌手沧桑的嗓音。也是在这里，我俩才亲眼目睹了一处艳遇：隔壁桌坐着一个中年女子，不久来了个年轻男子直接在对面坐下，简单介绍之后，畅饮甚欢，最后相拥而去。&lt;br /&gt;本来酒量就不咋样，回到客栈时也记不清几点了，潜意识里依稀记得今天走过的条条石板路和两边的风景，还有花枝招展的各种MM，然后视线渐渐模糊，只是期盼着明天的到来。&lt;/p&gt;

&lt;h3 id='day3_'&gt;Day.3 茶马古道、拉市海、涑河，和意外&lt;/h3&gt;

&lt;p&gt;从入驻大研古城第一天，一路上就总有主动上来拉客接团去茶马古道和拉市海的，今天终于抵不住诱惑，在客栈老板那里报了名。从大研到拉市海，大概半小时小面包车的车程。大热天地在高原地区玩户外，算是一件玩命的事情，还好今天是个大阴天，大大降低了难度。到达目的地后，老板安排了一位纳西族马夫一路带领我们。先是骑马重走当年的茶马古道，其实只是绕着一座小山丘上下溜了一圈，然后继续骑行到拉市海边，改为划船。拉市海是一个淡水湖，因为纯天然的环境成为了丽江的一个景点。马夫站在船尾划着船，我俩则在前面感受眼前宁静的一幕：平静的湖面、满湖的酸角、四周环绕的群山、和阵阵桨声和鸟叫声，似乎整个世界都静止了。划船之后已到饭店，我们被送到了村长家，由村长招待。后来想想，这家到底是不是村长，也无法取证，总之是吃了一顿农家乐罢了。&lt;br /&gt;从拉市海出来，小面包把我们带到下一个重点项目：涑河古镇。涑河和大研一样是一座古镇，只是大研开发的比较早，已经完全商业化了，而涑河则相对清静很多。也有不少驴友就冲着这一点，专程住到涑河。涑河内部和大研相似，只是总体规模稍微小一些，街道也没有那么错综复杂。另外街道上的人口密度也比大研少了很多，所以逛起来相对不那么费力，视线也更开阔。印象最深的是古镇中间的广场地带，几家开放式咖啡厅和餐厅沿河排列，店里三五成群聚集了各种驴友和老外，看起来相当小资。因为涑和太漂亮了，我俩直接在里面逛了三小时，然后打车回大研。&lt;br /&gt;回到大雁已经是晚上近八点了，只是经度稍微靠西的关系，天还没全黑掉。因为某人一直惦记着这里每天晚上都有一场的&lt;a href='http://baike.baidu.com/view/738135.htm'&gt;宣科先生&lt;/a&gt;主持的丽江古乐表演，趁着时间正合适，就直接买票入座了。这个古乐队的整容可是超级强大，年事最高的已经93岁，基本各个资历深厚。虽然演奏的内容几乎领悟不到，但暗地里还是能感受到他们对纳西古乐的理解和执着。&lt;br /&gt;本来到此为止，今天的行程可算是非常充实和愉快。但就在古乐快结束的二十来分钟，出了点小状况。先是天色巨变，下起了大雨，然后坐在我们前排的一排老外毫无征兆地被他们的导游叫走，接着，我的手机收到了老爸的一条短信：丽江附近地震啦！形势不妙，我赶紧上微薄搜索附近信息，果然是地震，发生在云南和四川交汇处，泸沽湖附近，影响还不小。到这里，宣科先生的演讲刚好落幕，我俩也没什么心情再去看宣科关于支持丽江古乐的介绍了，赶紧冒雨走回客栈。刚进客栈，老板和他爸就迎上来询问，“今天怎么这么晚回来，出事情了你们知道不&amp;#8230;.云云”，和老板聊完，心情似乎更加沉重了，默默回到房间，考虑考虑后续形成怎么安排。&lt;br /&gt;其实后来想想，有时候我们也正因为共同经历了这些逆势，反而更加促进了相互的理解，履历上增添了一些于众不同。&lt;/p&gt;

&lt;h3 id='day4_'&gt;Day.4 心情忐忑的一天&lt;/h3&gt;

&lt;p&gt;4 心情忐忑的又一天闲逛 广州早餐 木府 阿安酸奶 茶吧一下午&lt;/p&gt;

&lt;p&gt;关于客栈 从几年前的300+上升到2000+，生意相对不好做，要淘宝争排名，打口碑。客栈风格服务大不同，要考淘。接机，景区打折门票，桌球，大院，喝茶，公用电脑，网络质量，空调，门窗，闹市或安静，俯瞰小镇，&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>hello octopress</title>
   <link href="http://jiaqing.me/tech/2012/05/09/hello-octopress"/>
   <updated>2012-05-09T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/05/09/hello-octopress</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>tech rbt</title>
   <link href="http://jiaqing.me/tech/2012/04/09/tech-rbt"/>
   <updated>2012-04-09T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/04/09/tech-rbt</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>tech bst</title>
   <link href="http://jiaqing.me/tech/2012/04/01/tech-bst"/>
   <updated>2012-04-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/04/01/tech-bst</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>tech binarytree</title>
   <link href="http://jiaqing.me/tech/2012/04/01/tech-binarytree"/>
   <updated>2012-04-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/04/01/tech-binarytree</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>tech avl</title>
   <link href="http://jiaqing.me/tech/2012/04/01/tech-avl"/>
   <updated>2012-04-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/04/01/tech-avl</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>tech b+tree</title>
   <link href="http://jiaqing.me/tech/2012/04/01/btree"/>
   <updated>2012-04-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/tech/2012/04/01/btree</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>记忆：ACG续二</title>
   <link href="http://jiaqing.me/life/2012/02/04/memory-acg-3"/>
   <updated>2012-02-04T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/02/04/memory-acg-3</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>记忆：ACG续</title>
   <link href="http://jiaqing.me/life/2012/02/03/memory-acg-2"/>
   <updated>2012-02-03T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/02/03/memory-acg-2</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>记忆：ACG</title>
   <link href="http://jiaqing.me/life/2012/02/02/memory-acg"/>
   <updated>2012-02-02T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/02/02/memory-acg</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>我的2011</title>
   <link href="http://jiaqing.me/life/2012/01/01/summary-2011"/>
   <updated>2012-01-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2012/01/01/summary-2011</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>Jekyll Introduction</title>
   <link href="http://jiaqing.me/2011/12/29/jekyll-introduction"/>
   <updated>2011-12-29T00:00:00+08:00</updated>
   <id>http://jiaqing.me/2011/12/29/jekyll-introduction</id>
   <content type="html">&lt;p&gt;This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&amp;#8217;ll learn exactly &lt;em&gt;how&lt;/em&gt; Jekyll does what it does.&lt;/p&gt;

&lt;h2 id='overview'&gt;Overview&lt;/h2&gt;

&lt;h3 id='what_is_jekyll'&gt;What is Jekyll?&lt;/h3&gt;

&lt;p&gt;Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &amp;#8220;a simple, blog aware, static site generator&amp;#8221;.&lt;/p&gt;

&lt;h3 id='examples'&gt;Examples&lt;/h3&gt;

&lt;p&gt;This website is created with Jekyll. &lt;a href='https://github.com/mojombo/jekyll/wiki/Sites'&gt;Other Jekyll websites&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id='what_does_jekyll_do'&gt;What does Jekyll Do?&lt;/h3&gt;

&lt;p&gt;Jekyll is a ruby gem you install on your local system. Once there you can call &lt;code&gt;jekyll --server&lt;/code&gt; on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.&lt;/p&gt;

&lt;p&gt;Once parsed, Jekyll stores the result in a self-contained static &lt;code&gt;_site&lt;/code&gt; folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.&lt;/p&gt;

&lt;p&gt;You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once &lt;em&gt;beforehand&lt;/em&gt; and caches the &lt;em&gt;entire website&lt;/em&gt; in a folder for serving statically.&lt;/p&gt;

&lt;h3 id='jekyll_is_not_blogging_software'&gt;Jekyll is Not Blogging Software&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Jekyll is a parsing engine.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.&lt;/p&gt;

&lt;h3 id='why_should_i_care'&gt;Why Should I Care?&lt;/h3&gt;

&lt;p&gt;Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.&lt;/p&gt;

&lt;p&gt;Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Developers like Jekyll because we can write content like we write code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ability to write content in markdown or textile in your favorite text-editor.&lt;/li&gt;

&lt;li&gt;Ability to write and preview your content via localhost.&lt;/li&gt;

&lt;li&gt;No internet connection required.&lt;/li&gt;

&lt;li&gt;Ability to publish via git.&lt;/li&gt;

&lt;li&gt;Ability to host your blog on a static web-server.&lt;/li&gt;

&lt;li&gt;Ability to host freely on GitHub Pages.&lt;/li&gt;

&lt;li&gt;No database required.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id='how_jekyll_works'&gt;How Jekyll Works&lt;/h1&gt;

&lt;p&gt;The following is a complete but concise outline of exactly how Jekyll works.&lt;/p&gt;

&lt;p&gt;Be aware that core concepts are introduced in rapid succession without code examples. This information is not intended to specifically teach you how to do anything, rather it is intended to give you the &lt;em&gt;full picture&lt;/em&gt; relative to what is going on in Jekyll-world.&lt;/p&gt;

&lt;p&gt;Learning these core concepts should help you avoid common frustrations and ultimately help you better understand the code examples contained throughout Jekyll-Bootstrap.&lt;/p&gt;

&lt;h2 id='initial_setup'&gt;Initial Setup&lt;/h2&gt;

&lt;p&gt;After &lt;a href='/index.html#start-now'&gt;installing jekyll&lt;/a&gt; you&amp;#8217;ll need to format your website directory in a way jekyll expects. Jekyll-bootstrap conveniently provides the base directory format.&lt;/p&gt;

&lt;h3 id='the_jekyll_application_base_format'&gt;The Jekyll Application Base Format&lt;/h3&gt;

&lt;p&gt;Jekyll expects your website directory to be laid out like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- _config.yml
|-- _includes
|-- _layouts
|   |-- default.html
|   |-- post.html
|-- _posts
|   |-- 2011-10-25-open-source-is-good.markdown
|   |-- 2011-04-26-hello-world.markdown
|-- _site
|-- index.html
|-- assets
    |-- css
        |-- style.css
    |-- javascripts&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_config.yml&lt;/strong&gt;&lt;br /&gt;Stores configuration data.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_includes&lt;/strong&gt;&lt;br /&gt;This folder is for partial views.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_layouts&lt;/strong&gt; &lt;br /&gt;This folder is for the main templates your content will be inserted into. You can have different layouts for different pages or page sections.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_posts&lt;/strong&gt;&lt;br /&gt;This folder contains your dynamic content/posts. the naming format is required to be &lt;code&gt;@YEAR-MONTH-DATE-title.MARKUP@&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;_site&lt;/strong&gt;&lt;br /&gt;This is where the generated site will be placed once Jekyll is done transforming it.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;assets&lt;/strong&gt;&lt;br /&gt;This folder is not part of the standard jekyll structure. The assets folder represents &lt;em&gt;any generic&lt;/em&gt; folder you happen to create in your root directory. Directories and files not properly formatted for jekyll will be left untouched for you to serve normally.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(read more: &lt;a href='https://github.com/mojombo/jekyll/wiki/Usage'&gt;https://github.com/mojombo/jekyll/wiki/Usage&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id='jekyll_configuration'&gt;Jekyll Configuration&lt;/h3&gt;

&lt;p&gt;Jekyll supports various configuration options that are fully outlined here: &lt;a href='https://github.com/mojombo/jekyll/wiki/Configuration'&gt;https://github.com/mojombo/jekyll/wiki/Configuration&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='content_in_jekyll'&gt;Content in Jekyll&lt;/h2&gt;

&lt;p&gt;Content in Jekyll is either a post or a page. These content &amp;#8220;objects&amp;#8221; get inserted into one or more templates to build the final output for its respective static-page.&lt;/p&gt;

&lt;h3 id='posts_and_pages'&gt;Posts and Pages&lt;/h3&gt;

&lt;p&gt;Both posts and pages should be written in markdown, textile, or HTML and may also contain Liquid templating syntax. Both posts and pages can have meta-data assigned on a per-page basis such as title, url path, as well as arbitrary custom meta-data.&lt;/p&gt;

&lt;h3 id='working_with_posts'&gt;Working With Posts&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Post&lt;/strong&gt; &lt;br /&gt;Posts are created by properly formatting a file and placing it the &lt;code&gt;_posts&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br /&gt;A post must have a valid filename in the form &lt;code&gt;YEAR-MONTH-DATE-title.MARKUP&lt;/code&gt; and be placed in the &lt;code&gt;_posts&lt;/code&gt; directory. If the data format is invalid Jekyll will not recognize the file as a post. The date and title are automatically parsed from the filename of the post file. Additionally, each file must have &lt;a href='https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter'&gt;YAML Front-Matter&lt;/a&gt; prepended to its content. YAML Front-Matter is a valid YAML syntax specifying meta-data for the given file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Order&lt;/strong&gt;&lt;br /&gt;Ordering is an important part of Jekyll but it is hard to specify a custom ordering strategy. Only reverse chronological and chronological ordering is supported in Jekyll.&lt;/p&gt;

&lt;p&gt;Since the date is hard-coded into the filename format, to change the order, you must change the dates in the filenames.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt; &lt;br /&gt;Posts can have tags associated with them as part of their meta-data. Tags may be placed on posts by providing them in the post&amp;#8217;s YAML front matter. You have access to the post-specific tags in the templates. These tags also get added to the sitewide collection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories&lt;/strong&gt; &lt;br /&gt;Posts may be categorized by providing one or more categories in the YAML front matter. Categories offer more significance over tags in that they can be reflected in the URL path to the given post. Note categories in Jekyll work in a specific way. If you define more than one category you are defining a category hierarchy &amp;#8220;set&amp;#8221;. Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
title :  Hello World
categories : [lessons, beginner]
---&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This defines the category hierarchy &amp;#8220;lessons/beginner&amp;#8221;. Note this is &lt;em&gt;one category&lt;/em&gt; node in Jekyll. You won&amp;#8217;t find &amp;#8220;lessons&amp;#8221; and &amp;#8220;beginner&amp;#8221; as two separate categories unless you define them elsewhere as singular categories.&lt;/p&gt;

&lt;h3 id='working_with_pages'&gt;Working With Pages&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Creating a Page&lt;/strong&gt;&lt;br /&gt;Pages are created by properly formatting a file and placing it anywhere in the root directory or subdirectories that do &lt;em&gt;not&lt;/em&gt; start with an underscore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br /&gt;In order to register as a Jekyll page the file must contain &lt;a href='https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter'&gt;YAML Front-Matter&lt;/a&gt;. Registering a page means 1) that Jekyll will process the page and 2) that the page object will be available in the &lt;code&gt;site.pages&lt;/code&gt; array for inclusion into your templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Categories and Tags&lt;/strong&gt;&lt;br /&gt;Pages do not compute categories nor tags so defining them will have no effect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sub-Directories&lt;/strong&gt;&lt;br /&gt;If pages are defined in sub-directories, the path to the page will be reflected in the url. Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.
|-- people
    |-- bob
        |-- essay.html&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This page will be available at &lt;code&gt;http://yourdomain.com/people/bob/essay.html&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recommended Pages&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;br /&gt;You will always want to define the root index.html page as this will display on your root URL.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;404.html&lt;/strong&gt;&lt;br /&gt;Create a root 404.html page and GitHub Pages will serve it as your 404 response.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;sitemap.html&lt;/strong&gt;&lt;br /&gt;Generating a sitemap is good practice for SEO.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;about.html&lt;/strong&gt;&lt;br /&gt;A nice about page is easy to do and gives the human perspective to your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id='templates_in_jekyll'&gt;Templates in Jekyll&lt;/h2&gt;

&lt;p&gt;Templates are used to contain a page&amp;#8217;s or post&amp;#8217;s content. All templates have access to a global site object variable: &lt;code&gt;site&lt;/code&gt; as well as a page object variable: &lt;code&gt;page&lt;/code&gt;. The site variable holds all accessible content and metadata relative to the site. The page variable holds accessible data for the given page or post being rendered at that point.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Create a Template&lt;/strong&gt;&lt;br /&gt;Templates are created by properly formatting a file and placing it in the &lt;code&gt;_layouts&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Formatting&lt;/strong&gt;&lt;br /&gt;Templates should be coded in HTML and contain YAML Front Matter. All templates can contain Liquid code to work with your site&amp;#8217;s data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rending Page/Post Content in a Template&lt;/strong&gt;&lt;br /&gt;There is a special variable in all templates named : &lt;code&gt;content&lt;/code&gt;. The &lt;code&gt;content&lt;/code&gt; variable holds the page/post content including any sub-template content previously defined. Render the content variable wherever you want your main content to be injected into your template:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;body&amp;gt;
  &amp;lt;div id=&quot;sidebar&quot;&amp;gt; ... &amp;lt;/div&amp;gt;
  &amp;lt;div id=&quot;main&quot;&amp;gt;
    &amp;#123;{content}&amp;#125;
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
...&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id='subtemplates'&gt;Sub-Templates&lt;/h3&gt;

&lt;p&gt;Sub-templates are exactly templates with the only difference being they define another &amp;#8220;root&amp;#8221; layout/template within their YAML Front Matter. This essentially means a template will render inside of another template.&lt;/p&gt;

&lt;h3 id='includes'&gt;Includes&lt;/h3&gt;

&lt;p&gt;In Jekyll you can define include files by placing them in the &lt;code&gt;_includes&lt;/code&gt; folder. Includes are NOT templates, rather they are just code snippets that get included into templates. In this way, you can treat the code inside includes as if it was native to the parent template.&lt;/p&gt;

&lt;p&gt;Any valid template code may be used in includes.&lt;/p&gt;

&lt;h2 id='using_liquid_for_templating'&gt;Using Liquid for Templating&lt;/h2&gt;

&lt;p&gt;Templating is perhaps the most confusing and frustrating part of Jekyll. This is mainly due to the fact that Jekyll templates must use the Liquid Templating Language.&lt;/p&gt;

&lt;h3 id='what_is_liquid'&gt;What is Liquid?&lt;/h3&gt;

&lt;p&gt;&lt;a href='https://github.com/Shopify/liquid'&gt;Liquid&lt;/a&gt; is a secure templating language developed by &lt;a href='http://shopify.com'&gt;Shopify&lt;/a&gt;. Liquid is designed for end-users to be able to execute logic within template files without imposing any security risk on the hosting server.&lt;/p&gt;

&lt;p&gt;Jekyll uses Liquid to generate the post content within the final page layout structure and as the primary interface for working with your site and post/page data.&lt;/p&gt;

&lt;h3 id='why_do_we_have_to_use_liquid'&gt;Why Do We Have to Use Liquid?&lt;/h3&gt;

&lt;p&gt;GitHub uses Jekyll to power &lt;a href='http://pages.github.com/'&gt;GitHub Pages&lt;/a&gt;. GitHub cannot afford to run arbitrary code on their servers so they lock developers down via Liquid.&lt;/p&gt;

&lt;h3 id='liquid_is_not_programmerfriendly'&gt;Liquid is Not Programmer-Friendly.&lt;/h3&gt;

&lt;p&gt;The short story is liquid is not real code and its not intended to execute real code. The point being you can&amp;#8217;t do jackshit in liquid that hasn&amp;#8217;t been allowed explicitly by the implementation. What&amp;#8217;s more you can only access data-structures that have been explicitly passed to the template.&lt;/p&gt;

&lt;p&gt;In Jekyll&amp;#8217;s case it is not possible to alter what is passed to Liquid without hacking the gem or running custom plugins. Both of which cannot be supported by GitHub Pages.&lt;/p&gt;

&lt;p&gt;As a programmer - this is very frustrating.&lt;/p&gt;

&lt;p&gt;But rather than look a gift horse in the mouth we are going to suck it up and view it as an opportunity to work around limitations and adopt client-side solutions when possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Aside&lt;/strong&gt; &lt;br /&gt;My personal stance is to not invest time trying to hack liquid. It&amp;#8217;s really unnecessary &lt;em&gt;from a programmer&amp;#8217;s&lt;/em&gt; perspective. That is to say if you have the ability to run custom plugins (i.e. run arbitrary ruby code) you are better off sticking with ruby. Toward that end I&amp;#8217;ve built &lt;a href='http://github.com/plusjade/mustache-with-jekyll'&gt;Mustache-with-Jekyll&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='static_assets'&gt;Static Assets&lt;/h2&gt;

&lt;p&gt;Static assets are any file in the root or non-underscored subfolders that are not pages. That is they have no valid YAML Front Matter and are thus not treated as Jekyll Pages.&lt;/p&gt;

&lt;p&gt;Static assets should be used for images, css, and javascript files.&lt;/p&gt;

&lt;h2 id='how_jekyll_parses_files'&gt;How Jekyll Parses Files&lt;/h2&gt;

&lt;p&gt;Remember Jekyll is a processing engine. There are two main types of parsing in Jekyll.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Content parsing.&lt;/strong&gt; &lt;br /&gt;This is done with textile or markdown.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Template parsing.&lt;/strong&gt; &lt;br /&gt;This is done with the liquid templating language.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And thus there are two main types of file formats needed for this parsing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Post and Page files.&lt;/strong&gt;&lt;br /&gt;All content in Jekyll is either a post or a page so valid posts and pages are parsed with markdown or textile.&lt;/li&gt;

&lt;li&gt;&lt;strong&gt;Template files.&lt;/strong&gt; &lt;br /&gt;These files go in &lt;code&gt;_layouts&lt;/code&gt; folder and contain your blogs &lt;strong&gt;templates&lt;/strong&gt;. They should be made in HTML with the help of Liquid syntax. Since include files are simply injected into templates they are essentially parsed as if they were native to the template.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Arbitrary files and folders.&lt;/strong&gt; &lt;br /&gt;Files that &lt;em&gt;are not&lt;/em&gt; valid pages are treated as static content and pass through Jekyll untouched and reside on your blog in the exact structure and format they originally existed in.&lt;/p&gt;

&lt;h3 id='formatting_files_for_parsing'&gt;Formatting Files for Parsing.&lt;/h3&gt;

&lt;p&gt;We&amp;#8217;ve outlined the need for valid formatting using &lt;strong&gt;YAML Front Matter&lt;/strong&gt;. Templates, posts, and pages all need to provide valid YAML Front Matter even if the Matter is empty. This is the only way Jekyll knows you want the file processed.&lt;/p&gt;

&lt;p&gt;YAML Front Matter must be prepended to the top of template/post/page files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
layout: post
category : pages
tags : [how-to, jekyll]
---

... contents ...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Three hyphens on a new line start the Front-Matter block and three hyphens on a new line end the block. The data inside the block must be valid YAML.&lt;/p&gt;

&lt;p&gt;Configuration parameters for YAML Front-Matter is outlined here: &lt;a href='https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter'&gt;A comprehensive explanation of YAML Front Matter&lt;/a&gt;&lt;/p&gt;

&lt;h4 id='defining_layouts_for_posts_and_templates_parsing'&gt;Defining Layouts for Posts and Templates Parsing.&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;layout&lt;/code&gt; parameter in the YAML Front Matter defines the template file for which the given post or template should be injected into. If a template file specifies its own layout, it is effectively being used as a &lt;code&gt;sub-template.&lt;/code&gt; That is to say loading a post file into a template file that refers to another template file with work in the way you&amp;#8217;d expect; as a nested sub-template.&lt;/p&gt;

&lt;h2 id='how_jekyll_generates_the_final_static_files'&gt;How Jekyll Generates the Final Static Files.&lt;/h2&gt;

&lt;p&gt;Ultimately, Jekyll&amp;#8217;s job is to generate a static representation of your website. The following is an outline of how that&amp;#8217;s done:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll collects data.&lt;/strong&gt; &lt;br /&gt;Jekyll scans the posts directory and collects all posts files as post objects. It then scans the layout assets and collects those and finally scans other directories in search of pages.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll computes data.&lt;/strong&gt; &lt;br /&gt;Jekyll takes these objects, computes metadata (permalinks, tags, categories, titles, dates) from them and constructs one big &lt;code&gt;site&lt;/code&gt; object that holds all the posts, pages, layouts, and respective metadata. At this stage your site is one big computed ruby object.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll liquifies posts and templates.&lt;/strong&gt;&lt;br /&gt;Next jekyll loops through each post file and converts (through markdown or textile) and &lt;strong&gt;liquifies&lt;/strong&gt; the post inside of its respective layout(s). Once the post is parsed and liquified inside the the proper layout structure, the layout itself is &amp;#8220;liquified&amp;#8221;. &lt;br /&gt;&lt;strong&gt;Liquification&lt;/strong&gt; is defined as follows: Jekyll initiates a Liquid template, and passes a simpler hash representation of the ruby site object as well as a simpler hash representation of the ruby post object. These simplified data structures are what you have access to in the templates.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jekyll generates output.&lt;/strong&gt; &lt;br /&gt;Finally the liquid templates are &amp;#8220;rendered&amp;#8221;, thereby processing any liquid syntax provided in the templates and saving the final, static representation of the file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Notes.&lt;/strong&gt;&lt;br /&gt;Because Jekyll computes the entire site in one fell swoop, each template is given access to a global &lt;code&gt;site&lt;/code&gt; hash that contains useful data. It is this data that you&amp;#8217;ll iterate through and format using the Liquid tags and filters in order to render it onto a given page.&lt;/p&gt;

&lt;p&gt;Remember, in Jekyll you are an end-user. Your API has only two components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The manner in which you setup your directory.&lt;/li&gt;

&lt;li&gt;The liquid syntax and variables passed into the liquid templates.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All the data objects available to you in the templates via Liquid are outlined in the &lt;strong&gt;API Section&lt;/strong&gt; of Jekyll-Bootstrap. You can also read the original documentation here: &lt;a href='https://github.com/mojombo/jekyll/wiki/Template-Data'&gt;https://github.com/mojombo/jekyll/wiki/Template-Data&lt;/a&gt;&lt;/p&gt;

&lt;h2 id='conclusion'&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope this paints a clearer picture of what Jekyll is doing and why it works the way it does. As noted, our main programming constraint is the fact that our API is limited to what is accessible via Liquid and Liquid only.&lt;/p&gt;

&lt;p&gt;Jekyll-bootstrap is intended to provide helper methods and strategies aimed at making it more intuitive and easier to work with Jekyll =)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you&lt;/strong&gt; for reading this far.&lt;/p&gt;

&lt;h2 id='next_steps'&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;Please take a look at &lt;a href='' /&gt; or jump right into &lt;a href=''&gt;Usage&lt;/a&gt; if you&amp;#8217;d like.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>城市印象：黄山</title>
   <link href="http://jiaqing.me/life/2011/10/06/impress-huangshan"/>
   <updated>2011-10-06T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2011/10/06/impress-huangshan</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>Goodbye Alipay</title>
   <link href="http://jiaqing.me/work/2011/09/17/goodbye-alipay"/>
   <updated>2011-09-17T00:00:00+08:00</updated>
   <id>http://jiaqing.me/work/2011/09/17/goodbye-alipay</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：南京</title>
   <link href="http://jiaqing.me/life/2011/05/15/impress-nanjing"/>
   <updated>2011-05-15T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2011/05/15/impress-nanjing</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：苏州</title>
   <link href="http://jiaqing.me/life/2011/04/11/impress-suzhou"/>
   <updated>2011-04-11T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2011/04/11/impress-suzhou</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：杭州</title>
   <link href="http://jiaqing.me/life/2011/01/12/impress-hangzhou"/>
   <updated>2011-01-12T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2011/01/12/impress-hangzhou</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>我的2010</title>
   <link href="http://jiaqing.me/life/2011/01/01/summary-2010"/>
   <updated>2011-01-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2011/01/01/summary-2010</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：厦门</title>
   <link href="http://jiaqing.me/life/2010/07/30/impress-xiamen"/>
   <updated>2010-07-30T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2010/07/30/impress-xiamen</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：横店</title>
   <link href="http://jiaqing.me/life/2010/04/29/impress-hengdian"/>
   <updated>2010-04-29T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2010/04/29/impress-hengdian</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：信阳</title>
   <link href="http://jiaqing.me/life/2010/02/10/impress-xinyang"/>
   <updated>2010-02-10T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2010/02/10/impress-xinyang</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>我的2009</title>
   <link href="http://jiaqing.me/life/2010/01/01/summary-2009"/>
   <updated>2010-01-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2010/01/01/summary-2009</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：深圳</title>
   <link href="http://jiaqing.me/life/2009/10/10/impress-shenzheng"/>
   <updated>2009-10-10T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2009/10/10/impress-shenzheng</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：广州</title>
   <link href="http://jiaqing.me/life/2009/10/10/impress-guangzhou"/>
   <updated>2009-10-10T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2009/10/10/impress-guangzhou</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：舟山</title>
   <link href="http://jiaqing.me/life/2009/07/23/zhoushan"/>
   <updated>2009-07-23T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2009/07/23/zhoushan</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>我的2008</title>
   <link href="http://jiaqing.me/life/2009/01/01/summary-2008"/>
   <updated>2009-01-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2009/01/01/summary-2008</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：千岛湖</title>
   <link href="http://jiaqing.me/life/2008/07/07/impress-qiandaohu"/>
   <updated>2008-07-07T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2008/07/07/impress-qiandaohu</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>城市印象：成都</title>
   <link href="http://jiaqing.me/life/2008/07/01/impress-chengdu"/>
   <updated>2008-07-01T00:00:00+08:00</updated>
   <id>http://jiaqing.me/life/2008/07/01/impress-chengdu</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>Memory 512</title>
   <link href="http://jiaqing.me/2008/06/22/memory-512"/>
   <updated>2008-06-22T00:00:00+08:00</updated>
   <id>http://jiaqing.me/2008/06/22/memory-512</id>
   <content type="html"></content>
 </entry>
 
 <entry>
   <title>Memory 512 Earthquake</title>
   <link href="http://jiaqing.me/2008/06/21/memory-512-earthquake"/>
   <updated>2008-06-21T00:00:00+08:00</updated>
   <id>http://jiaqing.me/2008/06/21/memory-512-earthquake</id>
   <content type="html"></content>
 </entry>
 
 
</feed>